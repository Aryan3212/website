---
import SunIcon from '@/components/icons/SunIcon'
import MoonIcon from '@/components/icons/MoonIcon'
---

<script>
	class themeToggle extends HTMLElement {
		constructor() {
			super()
			const button = this.querySelector('button') as HTMLButtonElement
			if (button) {
				const bodyThemeIsDark = document.documentElement.classList.contains('dark')
				button.setAttribute('aria-pressed', String(bodyThemeIsDark))
				button.addEventListener('click', (e) => {
					if (e.currentTarget instanceof HTMLButtonElement) {
						let isPressed = e.currentTarget.getAttribute('aria-pressed') === 'true'
						let themeChangeEvent = new CustomEvent('theme-change', {
							detail: {
								theme: isPressed ? 'light' : 'dark'
							}
						})
						// dispatch event -> ThemeProvider.astro
						document.dispatchEvent(themeChangeEvent)
						button.setAttribute('aria-pressed', String(!isPressed))
					}
				})
			}
		}
	}

	if ('customElements' in window) {
		customElements.define('theme-toggle', themeToggle)
	}
</script>

<theme-toggle class='flex justify-center items-center relative h-6 w-6'>
	<button id='toggle-theme' class='group' aria-label='Toggle Theme'>
		<span class='opacity-0 group-aria-pressed:opacity-100 group-aria-[pressed=false]:hidden'>
			<SunIcon />
		</span>

		<span class='opacity-0 group-aria-[pressed=false]:opacity-100 group-aria-pressed:hidden'>
			<MoonIcon />
		</span>
	</button>
</theme-toggle>

<script is:inline>
	const button = document.getElementById('toggle-theme')
	const bodyThemeIsDark = document.documentElement.classList.contains('dark')
	button.setAttribute('aria-pressed', String(bodyThemeIsDark))
</script>
